---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: jupyterlab-restricted-dynamic
  annotations:
    openshift.io/display-name: JupyterLab with restricted user (Dynamic)
    description: |-
      Start JupyterLab images with regular 'jovyan' user, without sudo rights, using Source-to-Image build (S2I). 
      See the jupyter-on-openshift project: https://github.com/jupyter-on-openshift/jupyter-notebooks
      
      With this template you can install pip packages and JupyterLab extensions, but nothing that requires root privileges (such as installing apt or yum packages)
      Use "JupyterLab" templates with the root user to have root privileges.

      Dynamic storage: data will be stored in a persistent storage automatically created.
    iconClass: icon-python
    tags: python,jupyter
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-jupyter
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
    template.openshift.io/bindable: 'false'
labels:
  template: jupyterlab-restricted-dynamic
parameters:
- name: APPLICATION_NAME
  displayName: Application name
  description: Must be unique in the project. It will be used to generate the application
    URL.
  value: jupyterlab-persistent
  required: true
- name: NOTEBOOK_IMAGE
  displayName: Notebook image
  description: s2i-minimal-notebook, s2i-scipy-notebook or s2i-tensorflow-notebook
  value: s2i-minimal-notebook:3.6
  required: true
- name: JUPYTER_NOTEBOOK_PASSWORD
  displayName: Notebook password
  description: The password of the Jupyter Notebook. It will be stored securely in
    Resources > Secrets and cannot be read.
  from: "[a-zA-Z0-9]{16}"
  generate: expression
  required: true
- name: NOTEBOOK_INTERFACE
  displayName: Notebook interface
  description: Can be classic or lab.
  value: lab
- name: NOTEBOOK_MEMORY
  displayName: Notebook memory
  description: Maximum RAM available for the Jupyter Notebook application
  value: 5Gi
  required: true
- name: STORAGE_SIZE
  displayName: Storage size
  description: Size of the storage used for the notebook (approximate).
  value: 10Gi
  required: true
# - name: GIT_REPOSITORY_URL
#   displayName: Git repository URL
#   description: URL to the Git repository that will be cloned. Dependencies declared
#     in the requirements.txt or requirements.yml  will be installed, 
#     and the script at .s2i/bin/assemble will be run during the build.
#   value: https://github.com/MaastrichtU-IDS/covid-kg-notebooks
#   required: true
# - name: GIT_REFERENCE
#   displayName: Git repository branch
#   description: Branch of the Git repository to clone.
#   value: master
#   required: false

objects:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-password: "{.data['application-password']}"
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  stringData:
    application-password: "${JUPYTER_NOTEBOOK_PASSWORD}"

# - kind: ImageStream
#   apiVersion: image.openshift.io/v1
#   metadata:
#     name: "${APPLICATION_NAME}"
#     labels:
#       app: "${APPLICATION_NAME}"
#   spec:
#     lookupPolicy:
#       local: true

- apiVersion: "v1"
  kind: "PersistentVolumeClaim"
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    accessModes:
      - "ReadWriteMany"
    resources:
      requests:
        storage: ${STORAGE_SIZE}

# - kind: BuildConfig
#   apiVersion: build.openshift.io/v1
#   metadata:
#     name: "${APPLICATION_NAME}"
#     labels:
#       app: "${APPLICATION_NAME}"
#   spec:
#     triggers:
#     - type: ConfigChange
#     - type: ImageChange
#     source:
#       type: Git
#       git:
#         uri: "${GIT_REPOSITORY_URL}"
#         ref: "${GIT_REFERENCE}"
#       contextDir: ''
#     strategy:
#       type: Source
#       sourceStrategy:
#         from:
#           kind: ImageStreamTag
#           name: "${NOTEBOOK_IMAGE}"
#           namespace: openshift
#     output:
#       to:
#         kind: ImageStreamTag
#         name: "${APPLICATION_NAME}:latest"

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - setup-volume
        - notebook
        from:
          kind: ImageStreamTag
          name: "${NOTEBOOK_IMAGE}"
          namespace: openshift
          # ImageStreams need to be created in openshift namespace before
    replicas: 1
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
          deploymentconfig: "${APPLICATION_NAME}"
      spec:
        nodeSelector:
          dsri.unimaas.nl/cpu: 'true'
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}"
        initContainers:
        - name: setup-volume
          image: "${APPLICATION_NAME}:latest"
          command:
          - setup-volume.sh
          - "/opt/app-root"
          - "/mnt/app-root"
          resources:
            limits:
              memory: 5Gi
          volumeMounts:
          - name: data
            mountPath: "/mnt"
        containers:
        - name: notebook
          image: "${APPLICATION_NAME}:latest"
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8081
            protocol: TCP
          resources:
            limits:
              memory: "${NOTEBOOK_MEMORY}"
          volumeMounts:
          - name: data
            mountPath: "/opt/app-root"
            subPath: "app-root"
          env:
          - name: JUPYTER_NOTEBOOK_PASSWORD
            valueFrom:
              secretKeyRef:
                key: application-password
                name: "${APPLICATION_NAME}"
          - name: JUPYTER_NOTEBOOK_INTERFACE
            value: "${NOTEBOOK_INTERFACE}"
          - name: JUPYTER_ENABLE_WEBDAV
            value: 'true'
        automountServiceAccountToken: false

- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: 8081-tcp
      protocol: TCP
      port: 8081
      targetPort: 8081
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"

- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    host: ''
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
